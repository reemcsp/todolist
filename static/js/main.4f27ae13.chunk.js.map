{"version":3,"sources":["components/Todo.jsx","App.js","index.js"],"names":["Todo","state","completed","toggleTodo","setState","removeTodo","props","onRemove","content","style","display","justifyContent","flexDirection","width","checked","this","onClick","Text","delete","React","Component","Title","Typography","App","Paragraph","userInput","todos","level","placeholder","onChange","e","target","value","type","bordered","dataSource","renderItem","todo","Item","filter","ReactDOM","render","document","getElementById"],"mappings":"6SAgCeA,E,4MA1BXC,MAAQ,CACNC,WAAW,G,EAGbC,WAAa,WACX,EAAKC,SAAS,CAACF,WAAY,EAAKD,MAAMC,a,EAGxCG,WAAa,WACX,EAAKC,MAAMC,SAAS,EAAKD,MAAME,U,uDAI/B,OACI,yBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,gBAAiBC,cAAc,MAAOC,MAAM,SACxF,kBAAC,IAAD,CAAUC,QAASC,KAAKd,MAAMC,UAAWc,QAASD,KAAKZ,YACrD,kBAAC,IAAWc,KAAZ,CAAiBC,OAAQH,KAAKd,MAAMC,WACjCa,KAAKT,MAAME,UAGhB,kBAAC,IAAD,CAAQQ,QAASD,KAAKV,YAAtB,e,GArBOc,IAAMC,WCAjBC,EAAUC,IAAVD,MAgDOE,GA/CQD,IAAdE,U,kDAIP,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IACDL,MAAQ,CACXwB,UAAW,GACXC,MAAO,IAJQ,E,qDAQT,IAAD,OAEP,OACE,6BACE,kBAACL,EAAD,CAAOM,MAAO,GAAd,SACA,yBAAKlB,MAAO,CAACC,QAAS,OAAQC,eAAe,QAC7C,kBAAC,IAAD,CACEiB,YAAY,yBACZC,SAAU,SAAAC,GACR,EAAK1B,SAAS,CAACqB,UAAWK,EAAEC,OAAOC,WAGvC,kBAAC,IAAD,CACCC,KAAK,UACLjB,QAAS,WACR,EAAKZ,SAAS,CAACsB,MAAM,GAAD,mBAAM,EAAKzB,MAAMyB,OAAjB,CAAwB,EAAKzB,MAAMwB,gBAHzD,aASA,kBAAC,IAAD,CACES,UAAQ,EACRC,WAAYpB,KAAKd,MAAMyB,MACvBU,WAAY,SAAAC,GAAI,OACd,kBAAC,IAAKC,KAAN,KACE,kBAAC,EAAD,CAAM9B,QAAS6B,EAAM9B,SAAU,SAAAC,GAAO,OAAI,EAAKJ,SAAS,CAACsB,MAAO,EAAKzB,MAAMyB,MAAMa,QAAO,SAAAF,GAAI,OAAIA,IAAS7B,mB,GAnCrGW,IAAMC,YCJxBoB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.4f27ae13.chunk.js","sourcesContent":["import { Button, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Checkbox } from 'antd';\r\n\r\n\r\nclass Todo extends React.Component {\r\n    state = {\r\n      completed: false,\r\n    }\r\n\r\n    toggleTodo = () => {\r\n      this.setState({completed: !this.state.completed});\r\n    }\r\n\r\n    removeTodo = () => {\r\n      this.props.onRemove(this.props.content)\r\n    }\r\n\r\n    render(){\r\n      return (\r\n          <div style={{display: 'flex', justifyContent: 'space-between', flexDirection:'row', width:'100%'}}>\r\n            <Checkbox checked={this.state.completed} onClick={this.toggleTodo}>\r\n              <Typography.Text delete={this.state.completed}>\r\n                {this.props.content}\r\n              </Typography.Text>\r\n            </Checkbox> \r\n            <Button onClick={this.removeTodo}>remove</Button>\r\n          </div>\r\n      )  \r\n    }\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport { Input, Typography, Button, List } from 'antd';\nimport Todo from './components/Todo.jsx'\n\n\nconst { Title } = Typography;\nconst {  Paragraph } = Typography;\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props) ;\n    this.state = {\n      userInput: '',\n      todos: [],\n    };\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Title level={1}>Todos</Title>\n        <div style={{display: 'flex', justifyContent:'row'}}>\n        <Input\n          placeholder='What needs to be done?'\n          onChange={e => {\n            this.setState({userInput: e.target.value})\n          }}\n        />\n        <Button\n         type='primary'\n         onClick={() => {\n          this.setState({todos: [...this.state.todos, this.state.userInput]})\n         }}\n        >\n          Add Todo\n        </Button>\n        </div>\n        <List\n          bordered\n          dataSource={this.state.todos}\n          renderItem={todo => (\n            <List.Item>\n              <Todo content={todo} onRemove={content => this.setState({todos: this.state.todos.filter(todo => todo !== content)})} />\n            </List.Item>\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}